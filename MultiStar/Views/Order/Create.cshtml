@model appDash.Models.Order

@{
    ViewData["Title"] = "Create Order";
}

<h1>Create Order</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <!-- Agregar campos para el pedido (CreationDate, IsActive, CustomerId, etc.) -->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CreationDate" class="control-label"></label>
                <input asp-for="CreationDate" class="form-control" />
                <span asp-validation-for="CreationDate" class="text-danger"></span>
            </div>
            <!-- Agregar más campos para el pedido -->

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
            </div>
            <!-- Agregar un div para mostrar la lista de productos -->
            <div class="form-group">
                <h4>Available Products</h4>
                <select id="availableProducts" class="form-control" multiple>
ViewBag.ProductList = ObtenerListaDeProductos(); // Reemplaza con tu lógica real para obtener los productos
if (ViewBag.ProductList == null)
{
    ViewBag.ProductList = new List<Product>(); // O una lista vacía si no hay datos disponibles
}
                </select>
            </div>
            <!-- Botones para agregar productos -->
            <div class="form-group">
                <button type="button" id="addProduct" class="btn btn-primary">Add Product</button>
                <button type="button" id="removeProduct" class="btn btn-danger">Remove Product</button>
            </div>
            <!-- Lista de productos seleccionados -->
            <div class="form-group">
                <h4>Selected Products</h4>
                <select id="selectedProducts" class="form-control" multiple></select>
                <input type="hidden" id="selectedProductIds" name="SelectedProductIds" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var availableProducts = document.getElementById("availableProducts");
            var selectedProducts = document.getElementById("selectedProducts");
            var addProduct = document.getElementById("addProduct");
            var removeProduct = document.getElementById("removeProduct");
            var selectedProductIds = document.getElementById("selectedProductIds");

            addProduct.addEventListener("click", function () {
                for (var i = 0; i < availableProducts.options.length; i++) {
                    if (availableProducts.options[i].selected) {
                        var option = availableProducts.options[i];
                        selectedProducts.appendChild(option);
                    }
                }
            });

            removeProduct.addEventListener("click", function () {
                for (var i = 0; i < selectedProducts.options.length; i++) {
                    if (selectedProducts.options[i].selected) {
                        var option = selectedProducts.options[i];
                        availableProducts.appendChild(option);
                    }
                }
            });

            document.querySelector("form").addEventListener("submit", function () {
                var selectedIds = Array.from(selectedProducts.options).map(function (option) {
                    return option.value;
                });
                selectedProductIds.value = selectedIds.join(",");
            });
        });
    </script>
}
